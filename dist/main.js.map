{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Settings.ts","webpack:///./src/World.ts","webpack:///./src/Factory.ts","webpack:///./src/Object/Player/Controller.ts","webpack:///./src/Object/Bullet.ts","webpack:///./src/Object/Base.ts","webpack:///./src/Object/Unit.ts","webpack:///./src/Event/EventManager.ts","webpack:///./src/Utils.ts","webpack:///./src/index.ts","webpack:///./src/Object/Enemy.ts","webpack:///./src/Object/Player/Player.ts","webpack:///./src/Stage/Stage1.ts","webpack:///./src/Spawner.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Settings","WORLD_WIDTH","WORLD_HEIGHT","ENEMY_LIMIT_X","ENEMY_LIMIT_Y","MOVE_SPEED","WALK_SPEED","DEBUG_HITBOX","GAME_STEP_SIZE","RANDOM_SEED","camera","PIXI","Container","textures","gameStep","liveEnemies","this","app","Application","height","width","backgroundColor","autoStart","stage","bulletContainer","addChild","unitContainer","loader","Loader","shared","add","load","world","player","x","y","installControls","Button","RIGHT","LEFT","UP","DOWN","MOD","sprite","addToScreen","start","onGameLoaded","lag","values","Pools","ticker","maxFPS","minFPS","manager","gameTime","elapsedMS","execute","deltaTime","Bullet","forEach","bullet","visible","update","enemy","document","getElementById","innerHTML","Math","floor","FPS","toString","Factory","clear","obj","removeFromScreen","props","pool","find","e","undefined","setProperties","behavior","b","poolsKeyChanged","installedControls","controls","newControls","button","keyboardKey","entries","controller","handleCommand","assign","lastX","NONE","lastY","factorX","factorY","buttons","activate","speed","speedX","speedY","WorldObject","super","radiusSquared","radius","pow","onHit","texture","resources","circle","delta","elapsed","checkColision","CoordinateTransformer","_x","_y","isEnemy","angle","timeAlive","Sprite","from","Texture","WHITE","anchor","set","cos","sin","tint","updateSpeed","rect","move","fn","repeat","repeatTime","events","timers","time","index","sortedIndexBy","step","event","addTimer","currentTime","nextTimer","pop","addEvent","chance","ms","Promise","resolve","setTimeout","arcCount","linearSpeed","end","gameSteps","PI","min","max","integer","floating","onKeyDown","keyCode","onKeyUp","addEventListener","querySelector","appendChild","view","World","Spawner","getOwnPropertyNames","filter","prop","btn","createElement","onclick","Unit","attackCooldown","lastAttack","indexOf","canAttack","buildBullet","atan2","shotCount","spread","angleStep","ang","console","log","downStopArc","positions","xSpeed","xEnd","ySpeed","ySpeedMod","bulletSpeed","GameEvent","buildEnemy","fireAtPlayer","speedGain","randomFloat","fireArc","sleep","downAndFire","delay","times","pos","yMod","shootTime","arcAndFire","initialAngle","clockwise","reset","colors","w","PsychdelicWave"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([21,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","class Settings {\r\n    static readonly WORLD_WIDTH = 380;\r\n    static readonly WORLD_HEIGHT = 480;\r\n\r\n    static readonly ENEMY_LIMIT_X = Settings.WORLD_WIDTH + 100;\r\n    static readonly ENEMY_LIMIT_Y = Settings.WORLD_HEIGHT + 100;\r\n\r\n    static readonly MOVE_SPEED = 3;\r\n    static readonly WALK_SPEED = 1;\r\n\r\n    static DEBUG_HITBOX = true;\r\n\r\n    static readonly GAME_STEP_SIZE = 0.1;\r\n\r\n    static readonly RANDOM_SEED = \"SUNFLOWER\"\r\n}\r\nexport default Settings","import * as PIXI from 'pixi.js';\r\nimport Factory from './Factory';\r\nimport Settings from '@Settings';\r\nimport { installControls, Button } from '@Object/Player/Controller';\r\nimport Player from '@Object/Player/Player';\r\nimport EventManager, { GameEvent } from '@Event/EventManager';\r\nimport Enemy from '@Object/Enemy';\r\nimport { Bullet } from '@Object/Bullet';\r\nimport Stage1 from '@Stage/Stage1';\r\n\r\nfunction onGameLoaded(world: World) {\r\n    const player = new Player();\r\n    player.x = 250;\r\n    player.y = 100;\r\n    installControls({\r\n        [Button.RIGHT]: \"39\",\r\n        [Button.LEFT]: \"37\",\r\n        [Button.UP]: \"38\",\r\n        [Button.DOWN]: \"40\",\r\n        [Button.MOD]: \"16\"\r\n    }, player);\r\n    world.player = player;\r\n    world.unitContainer.addChild(player.sprite);\r\n    player.addToScreen();\r\n\r\n    Stage1();\r\n    world.app.start();\r\n\r\n}\r\n\r\nclass World {\r\n    app: PIXI.Application;\r\n    bulletContainer: PIXI.Container;\r\n    unitContainer: PIXI.Container;\r\n    camera: PIXI.Container = new PIXI.Container();\r\n    textures: { [k: string]: PIXI.Texture } = {};\r\n    loader: PIXI.Loader;\r\n    player!: Player;\r\n    gameStep = 0;\r\n    manager: EventManager;\r\n    liveEnemies: Enemy[] = [];\r\n\r\n    constructor() {\r\n        this.app = new PIXI.Application({\r\n            height: 600,\r\n            width: 800,\r\n            backgroundColor: 0xdde2ed,\r\n            autoStart: false\r\n        });\r\n        const stage = new PIXI.Container();\r\n        this.app.stage = stage;\r\n        this.bulletContainer = new PIXI.Container();\r\n        stage.addChild(this.bulletContainer);\r\n\r\n        this.unitContainer = new PIXI.Container();\r\n        stage.addChild(this.unitContainer);\r\n\r\n        this.loader = PIXI.Loader.shared;\r\n        this.loader.add(\"circle\", \"assets/circle.png\");\r\n        this.loader.add(\"rect\", \"assets/rect.png\");\r\n        this.loader.load(() => {\r\n            onGameLoaded(this);\r\n        });\r\n\r\n        let lag = 0;\r\n        let pools = Object.values(Factory.Pools);\r\n        this.app.ticker.maxFPS = 60;\r\n        this.app.ticker.minFPS = 30;\r\n        // Time between physics update\r\n        // Low is more smooth and expensive.\r\n        this.manager = new EventManager();               \r\n        \r\n        let gameTime = 0;\r\n        this.app.ticker.add(() => {\r\n            gameTime += this.app.ticker.elapsedMS;\r\n            this.manager.execute(gameTime);\r\n            lag += this.app.ticker.deltaTime;\r\n            while (lag >= Settings.GAME_STEP_SIZE) {\r\n                Factory.Pools[Bullet.name].forEach(bullet => {\r\n                    if (bullet.visible) bullet.update(Settings.GAME_STEP_SIZE, this.app.ticker.elapsedMS)\r\n                })\r\n                this.liveEnemies.forEach(enemy => {\r\n                    enemy.update(Settings.GAME_STEP_SIZE, this.app.ticker.elapsedMS);\r\n                })\r\n                this.player.update(Settings.GAME_STEP_SIZE, this.app.ticker.elapsedMS);\r\n                lag -= Settings.GAME_STEP_SIZE;\r\n                this.gameStep += 1;\r\n            }\r\n            document.getElementById(\"fps\")!.innerHTML = Math.floor(this.app.ticker.FPS).toString();\r\n        })\r\n    }\r\n}\r\n\r\nexport default new World();","import { WorldObject, Properties } from \"@Object/Base\";\r\nimport { Bullet } from \"@Object/Bullet\";\r\nimport World from \"@World\";\r\nimport Enemy, { EnemyProperties } from \"@Object/Enemy\";\r\n\r\nexport default class Factory {\r\n\r\n    static Pools: { [className: string]: WorldObject[] } = {\r\n        [Bullet.name]: [],\r\n        [Enemy.name]: []\r\n    };\r\n    static poolsKeyChanged = false;\r\n\r\n    static reset(clear = false) {\r\n        this.Pools[\"Bullet\"].forEach(obj => obj.removeFromScreen());\r\n        /*\r\n        if (clear) {\r\n            this.Pools = {};\r\n        }\r\n        */\r\n    }\r\n\r\n    static buildEnemy(props: EnemyProperties) {\r\n        const pool = this.Pools[Enemy.name];\r\n        let enemy = pool.find((e => !e.visible)) as Enemy;\r\n        if (enemy === undefined) {\r\n            enemy = new Enemy();\r\n            pool.push(enemy);\r\n            World.unitContainer.addChild(enemy.sprite);\r\n        }\r\n        enemy.setProperties(props);\r\n        enemy.behavior = () => {};        \r\n        enemy.addToScreen();\r\n        return enemy;\r\n    }\r\n\r\n    static buildBullet(props: Properties) {\r\n        const pool = this.Pools[Bullet.name];\r\n        let bullet = pool.find((b => !b.visible)) as Bullet;\r\n        if (bullet === undefined) {\r\n            bullet = new Bullet();\r\n            pool.push(bullet);\r\n            World.bulletContainer.addChild(bullet.sprite);\r\n        }\r\n        bullet.behavior = () => {};\r\n        bullet.setProperties(props);\r\n        bullet.addToScreen();       \r\n        return bullet;\r\n    }\r\n}","import Player from \"./Player\";\r\nimport Settings from \"@Settings\";\r\n\r\nexport enum Button {\r\n    NONE, UP, DOWN, LEFT, RIGHT, MOD\r\n}\r\n\r\nexport const installedControls: {\r\n    [key: string]: Function;\r\n} = {};\r\n\r\ninterface ControlScheme {\r\n    [Button.RIGHT]: string;\r\n    [Button.LEFT]: string;\r\n    [Button.UP]: string;\r\n    [Button.DOWN]: string;\r\n    [Button.MOD]: string;\r\n}\r\n\r\nexport function installControls(controls: ControlScheme, player: Player) {\r\n    const newControls: typeof installedControls = {};\r\n    for (const [button, keyboardKey] of Object.entries(controls)) {\r\n        newControls[keyboardKey] = player.controller.handleCommand(button as unknown as Button)\r\n    }\r\n    Object.assign(installedControls, newControls)\r\n}\r\n\r\nexport default class Controller {\r\n    lastX = Button.NONE\r\n    lastY = Button.NONE\r\n    factorX = 0;\r\n    factorY = 0;\r\n\r\n    buttons = {\r\n        [Button.NONE]: false,\r\n        [Button.UP]: false,\r\n        [Button.DOWN]: false,\r\n        [Button.LEFT]: false,\r\n        [Button.RIGHT]: false,\r\n        [Button.MOD]: false,\r\n    }\r\n    player: Player;\r\n\r\n    constructor(player: Player) {\r\n        this.player = player;\r\n    }\r\n\r\n    handleCommand(button: Button) {\r\n        return (activate: boolean) => {\r\n            this.buttons[button] = activate;\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if (!this.buttons[this.lastX]) {\r\n            if (this.buttons[Button.LEFT]) {\r\n                this.factorX = -1;\r\n                this.lastX = Button.LEFT;\r\n            }\r\n            else if (this.buttons[Button.RIGHT]) {\r\n                this.factorX = 1;\r\n                this.lastX = Button.RIGHT;\r\n            }\r\n            else {\r\n                this.factorX = 0;\r\n                this.lastX = Button.NONE;\r\n            }\r\n        }\r\n        if (!this.buttons[this.lastY]) {\r\n            if (this.buttons[Button.DOWN]) {\r\n                this.factorY = -1;\r\n                this.lastY = Button.DOWN;\r\n            }\r\n            else if (this.buttons[Button.UP]) {\r\n                this.factorY = 1;\r\n                this.lastY = Button.UP;\r\n            }\r\n            else {\r\n                this.factorY = 0;\r\n                this.lastY = Button.NONE;\r\n            }\r\n        }\r\n        const speed = this.buttons[Button.MOD] ? Settings.WALK_SPEED : Settings.MOVE_SPEED;\r\n        this.player.speedX = this.factorX * speed;\r\n        this.player.speedY = this.factorY * speed;\r\n    }\r\n}","import World from \"@World\";\r\nimport { WorldObject, Properties } from \"./Base\";\r\nimport Settings from \"@Settings\";\r\n\r\nexport class Bullet extends WorldObject {\r\n\r\n    constructor() {\r\n        super();\r\n        this.radiusSquared = 64;\r\n        this.radius = 8;\r\n    }\r\n\r\n    checkColision() {\r\n        //if (this.isEnemy) {\r\n        const distance = Math.pow(World.player.x - this.x, 2) + Math.pow(World.player.y - this.y, 2);\r\n        if (distance <= (this.radius + World.player.radius)) {\r\n            World.player.onHit(this);\r\n            this.removeFromScreen();\r\n        }\r\n        //}\r\n    }\r\n\r\n    setProperties(props: Properties) {\r\n        props.texture = props.texture ? props.texture : World.loader.resources.circle.texture;\r\n        super.setProperties(props);        \r\n    }\r\n\r\n    update(delta: number, elapsed: number): void {\r\n        if (!this.visible || this.x > Settings.WORLD_WIDTH || this.x < 0\r\n            || this.y > Settings.WORLD_HEIGHT || this.y < 0) {\r\n            this.removeFromScreen();\r\n            return;\r\n        }\r\n        this.checkColision();\r\n        super.update(delta, elapsed);\r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\nimport Settings from \"@Settings\";\r\nimport World from \"@World\";\r\n\r\nabstract class CoordinateTransformer {\r\n\r\n    private _x = 0\r\n    private _y = 0\r\n    abstract sprite: PIXI.DisplayObject\r\n\r\n    set x(value: number) {\r\n        this._x = value;\r\n        this.sprite.x = this.x; //Math goes here\r\n    }\r\n\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set y(value: number) {\r\n        this._y = value;\r\n        this.sprite.y = Settings.WORLD_HEIGHT - this.y;\r\n    }\r\n\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n}\r\n\r\ninterface SpeedAngular {\r\n    speed: number\r\n    angle: number\r\n}\r\n\r\ninterface SpeedScalar {\r\n    x: number\r\n    y: number\r\n}\r\n\r\nexport interface Properties {\r\n    x: number;\r\n    y: number;\r\n    speed: SpeedAngular | SpeedScalar;\r\n    radius?: number;\r\n    texture?: PIXI.Texture;\r\n}\r\n\r\nexport abstract class WorldObject extends CoordinateTransformer {\r\n    sprite: PIXI.Sprite;\r\n    speed = 0;\r\n    speedX = 0;\r\n    speedY = 0;\r\n    isEnemy = true;\r\n    radiusSquared = 0;\r\n    radius = 0;\r\n    angle = 0;\r\n    timeAlive = 0;\r\n    \r\n\r\n    constructor(texture?: PIXI.Texture) {\r\n        super();\r\n        this.sprite = PIXI.Sprite.from(texture ? texture : PIXI.Texture.WHITE);\r\n        this.sprite.anchor.set(0.5);\r\n    }\r\n\r\n    get visible() {\r\n        return this.sprite.visible;\r\n    }\r\n\r\n    set visible(value: boolean) {\r\n        this.sprite.visible = value;\r\n    }\r\n\r\n    addToScreen() {\r\n        this.visible = true;\r\n        this.timeAlive = 0;\r\n    }\r\n\r\n    updateSpeed() {\r\n        this.speedX = Math.cos(this.angle) * this.speed;\r\n        this.speedY = Math.sin(this.angle) * this.speed;\r\n    }\r\n\r\n    removeFromScreen() {\r\n        this.visible = false;\r\n        this.sprite.tint = 0xFFFFFF;\r\n    }\r\n\r\n    move(delta: number) {\r\n        this.x += this.speedX * delta;\r\n        this.y += this.speedY * delta;\r\n    }\r\n\r\n    setProperties(props: Properties) {\r\n        this.x = props.x;\r\n        this.y = props.y;\r\n        if (\"speed\" in props.speed) {\r\n            this.speed = props.speed.speed;\r\n            this.angle = props.speed.angle;\r\n            this.updateSpeed();\r\n        }\r\n        else {\r\n            this.speedX = props.speed.x;\r\n            this.speedY = props.speed.y;\r\n        }\r\n        this.sprite.texture = props.texture ? props.texture : World.loader.resources.rect.texture;\r\n        this.radiusSquared = Math.pow(props.radius ? props.radius : 2, 2);\r\n    }\r\n\r\n    behavior() {}\r\n\r\n    update(delta: number, elapsed: number) {\r\n        this.timeAlive += elapsed;\r\n        this.behavior();\r\n        this.move(delta);\r\n    }\r\n}","import { WorldObject } from \"./Base\";\r\n\r\nexport abstract class Unit extends WorldObject {\r\n\r\n}","import _ from \"lodash\";\r\n\r\nexport class GameEvent {\r\n\r\n    repeat: number;\r\n    repeatTime: number;\r\n    fn: () => void;\r\n\r\n    constructor(fn: () => void, repeat = 0, repeatTime = -1) {\r\n        this.repeat = repeat;\r\n        this.repeatTime = repeatTime;\r\n        this.fn = fn;\r\n    }\r\n\r\n    execute() {\r\n        this.fn();\r\n    }\r\n}\r\n\r\n\r\nexport default class EventManager {\r\n\r\n    events: { [step: number]: GameEvent[] } = {};\r\n    timers: number[] = [];\r\n\r\n    private addTimer(time: number) {\r\n        const index = _.sortedIndexBy(this.timers, time, o => -o);\r\n        this.timers.splice(index, 0, time);\r\n    }\r\n\r\n    get nextTimer() {\r\n        return this.timers[this.timers.length - 1];\r\n    }\r\n\r\n    addEvent(step: number, event: GameEvent) {\r\n        if (!(step in this.events)) {\r\n            this.events[step] = []\r\n            this.addTimer(step);\r\n        }\r\n        this.events[step].push(event);\r\n    }\r\n\r\n    execute(currentTime: number) {\r\n        while (currentTime >= this.nextTimer) {\r\n            const time = this.timers.pop();\r\n            if (time === undefined) {\r\n                return;\r\n            }\r\n            this.events[time].forEach(event => {\r\n                event.execute();\r\n                if (event.repeat > 0) {\r\n                    event.repeat--;\r\n                    this.addEvent(time + event.repeatTime, event);\r\n                }\r\n            })\r\n            delete this.events[time];\r\n        }\r\n    }\r\n}","import Settings from \"@Settings\";\r\nimport Chance from \"chance\";\r\n\r\nconst chance = new Chance(Settings.RANDOM_SEED);\r\n\r\nexport function sleep(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport function angleStep(arcCount: number, linearSpeed: number, start: number, end = Settings.WORLD_WIDTH) {\r\n    const distance = end - start;\r\n    const gameSteps = distance / linearSpeed / Settings.GAME_STEP_SIZE;\r\n    return (Math.PI * arcCount) / gameSteps;\r\n}\r\n\r\nexport function randomInt(min: number, max: number) {\r\n    return chance.integer({ min: min, max: max });\r\n}\r\n\r\nexport function randomFloat(min: number, max: number) {\r\n    return chance.floating({ min: min, max: max });\r\n}","import world from \"./World\";\r\nimport { Spawner } from \"@Spawner\";\r\nimport Factory from \"@Factory\";\r\nimport { installedControls } from \"@Object/Player/Controller\";\r\n\r\nfunction onKeyDown(event: KeyboardEvent) {\r\n    if (event.keyCode in installedControls) {\r\n        installedControls[event.keyCode](true)\r\n    }\r\n}\r\n\r\nfunction onKeyUp(event: KeyboardEvent) {\r\n    if (event.keyCode in installedControls) {\r\n        installedControls[event.keyCode](false)\r\n    }\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    document.addEventListener('keydown', onKeyDown, false);\r\n    document.addEventListener('keyup', onKeyUp, false);\r\n    document.querySelector(\"#cv\")!.appendChild(world.app.view);\r\n});\r\n\r\n(window as any).World = world;\r\n(window as any).Spawner = Spawner;\r\n(window as any).Factory = Factory;\r\n\r\nconst all = Object.getOwnPropertyNames(Spawner)\r\n    .filter(prop => typeof (Spawner as any)[prop] === \"function\");\r\nall.forEach(fn => {\r\n    const btn = document.createElement(\"button\");\r\n    btn.onclick = () => (Spawner as any)[fn].bind(Spawner)();\r\n    btn.innerHTML = fn;\r\n    document.getElementById(\"buttons\")!.appendChild(document.createElement(\"br\"));\r\n    document.getElementById(\"buttons\")!.appendChild(btn);\r\n})","import World from \"@World\";\r\nimport { Unit } from \"./Unit\";\r\nimport Settings from '@Settings';\r\nimport Factory from \"@Factory\";\r\nimport { Properties } from \"./Base\";\r\n\r\nexport type EnemyProperties = Properties & {attackCooldown?: number}\r\n\r\nexport default class Enemy extends Unit {\r\n\r\n    attackCooldown = 20000;\r\n    lastAttack = 0;\r\n\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    addToScreen() {\r\n        super.addToScreen();\r\n        this.sprite.tint = 0xFF0000;\r\n        World.liveEnemies.push(this);\r\n    }\r\n\r\n    removeFromScreen() {\r\n        super.removeFromScreen();\r\n        const index = World.liveEnemies.indexOf(this);\r\n        World.liveEnemies.splice(index, 1);\r\n    }\r\n\r\n    setProperties(props: EnemyProperties) {\r\n        this.attackCooldown = props.attackCooldown ? props.attackCooldown : 0;\r\n        super.setProperties(props);        \r\n    }\r\n\r\n    get canAttack() {\r\n        return this.lastAttack >= this.attackCooldown;\r\n    }\r\n\r\n    fireAtPlayer(speed: number) {\r\n        if (this.canAttack) {\r\n            this.lastAttack = 0;\r\n            Factory.buildBullet({x: this.x, y: this.y, speed: {speed, angle: Math.atan2(World.player.y - this.y, World.player.x - this.x)}});\r\n        }\r\n    }\r\n\r\n    fireArc(shotCount: number, speed: number, angle = 0, spread = -Math.PI) {\r\n        if (!this.canAttack) {\r\n            return;\r\n        }\r\n        this.lastAttack = 0;\r\n        const angleStep = (spread - angle) / shotCount;\r\n        for(let i=0; i<shotCount; i++) {\r\n            const ang = angle + angleStep * i;\r\n            Factory.buildBullet({x: this.x, y: this.y, speed: {speed, angle: ang}})\r\n        }\r\n        \r\n    }\r\n\r\n    update(delta: number, elapsed: number): void {\r\n        if (!this.visible || this.x > Settings.ENEMY_LIMIT_X || this.x < -100\r\n            || this.y > Settings.ENEMY_LIMIT_Y || this.y < 0) {\r\n            this.removeFromScreen();\r\n            return;\r\n        }\r\n        super.update(delta, elapsed);\r\n        this.lastAttack += elapsed;        \r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { Unit } from \"@Object/Unit\";\r\nimport World from '@World';\r\nimport Controller from './Controller';\r\nimport Settings from '@Settings';\r\nimport { Bullet } from '@Object/Bullet';\r\n\r\nexport default class Player extends Unit {\r\n    controller: Controller;\r\n\r\n    constructor(tint = 0x0) {\r\n        super(World.loader.resources.rect.texture);\r\n        this.radiusSquared = 16;\r\n        this.radius = 4;\r\n        this.isEnemy = false;\r\n        this.sprite.tint = tint;\r\n        this.controller = new Controller(this);\r\n    }\r\n\r\n    set x(value: number) {\r\n        if (value > Settings.WORLD_WIDTH - 8) {\r\n            value = Settings.WORLD_WIDTH - 8;\r\n        }\r\n        else if (value < 0) {\r\n            value = 0;\r\n        }\r\n        super.x = value;\r\n    }\r\n\r\n    get x() {\r\n        return super.x;\r\n    }\r\n\r\n    set y(value: number) {\r\n        if (value > Settings.WORLD_HEIGHT) {\r\n            value = Settings.WORLD_HEIGHT;\r\n        }\r\n        else if (value < 12) {\r\n            value = 12;\r\n        }\r\n        super.y = value;\r\n    }\r\n\r\n    get y() {\r\n        return super.y;\r\n    }\r\n\r\n    onHit(bullet: Bullet) {\r\n        console.log(\"Hit!\");\r\n    }\r\n\r\n    update(delta: number, elapsed: number): void {\r\n        this.controller.update();\r\n        this.move(delta);\r\n    }\r\n}","import World from \"@World\";\r\nimport { GameEvent } from \"@Event/EventManager\";\r\nimport Factory from \"@Factory\";\r\nimport Enemy from \"@Object/Enemy\";\r\nimport { angleStep, sleep, randomFloat, randomInt } from \"@Utils\";\r\nimport Settings from \"@Settings\";\r\nimport _ from \"lodash\";\r\nconst levelStart = 1000;\r\n\r\nfunction downAndFire(start: number, positions: number[]) {\r\nWorld.manager.addEvent(start, new GameEvent(async () => {\r\n        //const pos = [300, 230, 50, 350, 180, 110]\r\n        for (let i = 0; i < positions.length; i++) {\r\n            const speedGain = randomFloat(0.0001, 0.003);\r\n            const e = Factory.buildEnemy({x: positions[i], y: 500, speed: {x: 0, y: -2.5}, attackCooldown: 15000})\r\n            e.behavior = function(this: Enemy){            \r\n                this.speedY += speedGain;\r\n                if (this.speedY >= 0) {\r\n                    this.behavior = () => this.fireArc(4, 2, - Math.PI / 4);\r\n                }\r\n            }\r\n            await sleep(1500);\r\n        }\r\n    }));\r\n}\r\n\r\nfunction arcAndFire(start: number, y: number, x: number, speedX: number, angleStep: number, yMod: number, bulletSpeed: number, shootTime: number){\r\n    World.manager.addEvent(start, new GameEvent(async () => {\r\n        //const shootTime = [10000, 8000, 25000, 21580, 12000, 14000, 6870, 2580, 7870, 9999];\r\n        const e = Factory.buildEnemy({x, y, speed: {x: speedX, y: 0}})\r\n        e.angle = angleStep;\r\n        e.behavior = function(this: Enemy) {\r\n            this.angle += angleStep;\r\n            this.speedY = Math.sin(this.angle) - yMod;\r\n            if (this.timeAlive >= shootTime) {\r\n                this.fireAtPlayer(bulletSpeed);\r\n                this.behavior = () => {\r\n                    this.angle += angleStep;\r\n                    this.speedY = Math.sin(this.angle) - yMod;\r\n                }\r\n            }\r\n        }\r\n    }));\r\n}\r\n\r\nfunction downStopArc(start: number, positions: number[], y: number, xSpeed: number, xEnd: number, ySpeed: number, ySpeedMod: number, bulletSpeed: number) {\r\n    World.manager.addEvent(start, new GameEvent(() => {\r\n        //const pos = [330, 340];\r\n        for(let i=0; i < positions.length; i++){\r\n            const e = Factory.buildEnemy({x: positions[i], y: y, speed: {x: 0, y: ySpeed}, attackCooldown: 20000})            \r\n            e.behavior = function(this: Enemy){            \r\n                this.speedY += ySpeedMod;\r\n                this.fireAtPlayer(bulletSpeed);\r\n                if (this.speedY >= 0) {\r\n                    this.angle = Math.PI / 2;\r\n                    this.speedX = xSpeed;\r\n                    const step = angleStep(1, xSpeed, this.x, xEnd);\r\n                    this.behavior = () => {\r\n                        this.fireAtPlayer(bulletSpeed);\r\n                        this.speedY = Math.sin(this.angle);\r\n                        this.angle -= step;                    \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }));\r\n}\r\nexport default async function() {\r\n    downAndFire(1000, [300, 230, 50, 350, 180, 110]);    \r\n    let delay = 500;\r\n    _.times(10, async (i) => {\r\n        downStopArc(10000 + (delay * i), [330, 340], 500, -2, 0, -2, 0.001, 2);\r\n        downStopArc(10000 + (delay * i), [30, 40], 500, 2, Settings.WORLD_WIDTH, -2, 0.001, 2);\r\n    })\r\n    delay = 300;\r\n    let pos = [10000, 8000, 25000, 21580, 12000, 14000, 6870, 2580, 7870, 9999];\r\n    _.times(10, async (i) => {\r\n        arcAndFire(25000 + (i * delay), 380, 0, 2, 0.005, 0, 2, pos[i]);\r\n    })\r\n}","import Factory from \"@Factory\";\r\nimport { sleep } from \"@Utils\";\r\n\r\nexport class Spawner {\r\n\r\n    static async spawn() {\r\n        const bullet = Factory.buildBullet({x:240, y:380, speed: {speed: 1, angle: 3 * Math.PI / 2}});\r\n        //bullet.speed = 1.5;\r\n        bullet.updateSpeed();\r\n    }\r\n\r\n    static async PsychdelicWave(initialAngle = 7 * Math.PI / 4, clockwise = true, clear = true) {\r\n        if (clear) Factory.reset();\r\n        const radius = 1;\r\n        const waves = 1;\r\n        const count = 16;\r\n        const step = (clockwise ? -1 : +1) * 0.08;\r\n        const angleStep = (clockwise ? -1 : + 1) * 0.15;\r\n        const colors = [0x9400D3, 0x4B0082, 0x0000FF, 0x00FF00, 0xFFFF00, 0xFF7F00, 0xFF0000];\r\n        for (let w = 0; w < waves; w++) {\r\n            initialAngle = initialAngle + step;\r\n            for (let i = 0; i < count; i++) {\r\n                const angle = initialAngle + (angleStep * i);\r\n                const x = 240 + radius * Math.cos(angle);\r\n                const y = 380 + radius * Math.sin(angle);\r\n                const bullet = Factory.buildBullet({x, y, speed: {speed: 1.5, angle: angle}});\r\n                bullet.updateSpeed();\r\n                bullet.sprite.tint = colors[i % 7];\r\n                await sleep(50);\r\n            }\r\n            await sleep(100);\r\n        }\r\n    }\r\n\r\n    static async PsychdelicMadness() {\r\n        let angle = 7 * Math.PI / 4;\r\n        for (let i = 0; i < 4; i++) {\r\n            this.PsychdelicWave(angle, false, false)\r\n            angle -= Math.PI / 2;\r\n            //await sleep(200);\r\n        }\r\n        //await sleep(500)\r\n        angle = 7 * Math.PI / 4;\r\n        for (let i = 0; i < 4; i++) {\r\n            this.PsychdelicWave(angle, true, false)\r\n            angle += Math.PI / 2;\r\n            //await sleep(200);\r\n        }\r\n    }\r\n}"],"sourceRoot":""}